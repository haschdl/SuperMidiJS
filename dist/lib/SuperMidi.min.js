class Pad{constructor(e,t,i){this.name=e,this.code=t,this.status=!1}}var PAD_MODE=Object.freeze({TOGGLE:1,RADIO:2});class PadSet{constructor(e,t){this.padCount=Object.keys(t).length,this.padMode=e,this.pads=[],this.padKeys=[];let i=Object.keys(t);for(let e=0;e<this.padCount;e++){let n=i[e],a=Uint8Array.from(t[n]),o=PadSet.ixFromNotes(a);this.pads[e]=new Pad(n.toUpperCase(),e),this.padKeys[o]||(this.padKeys[o]=[]),this.padKeys[o].push(e)}}updateByMessage(e){let t=PadSet.ixFromNotes(e),i=this.padKeys[t];if(i)switch(this.padMode){case PAD_MODE.TOGGLE:this.updatePadsToggle(i);break;case PAD_MODE.RADIO:this.updatePadsRadio(i)}else console.log("Received a note which is not mapped to any SuperMidiJS key! "+e)}updatePadsRadio(e){this.pads.forEach(e=>e.status=!1),e.forEach(e=>{let t=this.pads[e].status;this.pads[e].status=!t})}updatePadsToggle(e){e.forEach(e=>{let t=this.pads[e].status;this.pads[e].status=!t})}static ixFromNotes(e){return(e[2]<<16)+(e[1]<<8)+e[0]}get length(){return this.padCount}getPad(e){return this.pads[e]}get firstSelected(){for(let e=0;e<this.padCount;e++)if(1==this[e].status)return this.pads[e].code}}class Knob{constructor(e,t,i){this.min_value=t,this.max_value=i,this.value=0}range(e,t){return this}get knobValueNormal(){let e=0;return((e=this.hasDefault?this.defaultValue:this.value)-this.min_value)/(this.max_value-this.min_value)}set knobValue(e){this.value=e}get knobValue(){return this.value}}class KnobSet{constructor(e){for(let t=0;t<e;t++)this[t]=new Knob(t,0,127)}}class Configuration{constructor({manufacturer:e,name:t,pads:i={},sliders:n={}}){this.manufacturer=e,this.name=t,this.pads=i,this.sliders=n}}const _configFolder="/config/";class Configurator{constructor(){}static configFolder(){return _configFolder}static getFileName(e,t){return e+" "+t+".json"}static getFilePath(e,t){let i=this.getFileName(e,t);return Configurator.configFolder()+i}static saveToStorage(e){let t=e.manufacturer,i=e.name,n=this.getFileName(t,i);localStorage.setItem(n,JSON.stringify(e))}static getFromStorage(e,t){window.localStorage;let i=this.getFileName(e,t),n=localStorage.getItem(i);if(null==n)return null;console.debug(`Configuration found in storage for ${e} ${t}`);let a=JSON.parse(n);return new Configuration(a)}getConfigurationOnlineResponse(e,t,i){if(0==e.ok||404==e.status){let e=`Unfortunately a configuration for ${t} ${i} was not found`;return console.warn(e),Promise.reject(e)}return console.log(`Configuration for ${i} found online!`),e.json()}getConfigurationOnline(e,t){return new Promise((i,n)=>{let a=Configurator.getFilePath(e,t);fetch(a).then(i=>this.configLoaded(i,e,t)).then(e=>i(e)).catch(e=>n(e))})}}const ConfigPanelStyles=".formOuter{border-radius:5px;background-color:#cacacaf8;padding:10px;display:table;position:fixed;top:5vh;width:50vw;margin-left:25vw}.formMiddle{display:table-cell;vertical-align:middle}.formInner{margin-left:auto;margin-right:auto}form{overflow:auto;height:80vh;font-family:Helvetica}input[type=text],select{width:50%;padding:12px 20px;margin:8px 0;border:1px solid #ccc;border-radius:4px;box-sizing:border-box}.inputSmall{width:20%!important;text-align:center;padding:5px;font-family:monospace;min-width:130px}label{width:15%;margin:20px 0;padding:10px 5px;text-align:right;display:inline-block}.labelSmall{width:8%}input[type=submit]{width:100%;background-color:#4CAF50;color:#fff;padding:14px 20px;margin:8px 0;border:none;border-radius:4px;cursor:pointer}input[type=submit]:hover{background-co";function removeElement(e){let t=document.getElementById(e);t&&t.parentNode.removeChild(t)}function createEl(e,t,i,n,a){let o=document.createElement(e);return n&&(o.innerHTML=n),a&&(o.type=a),i&&(o.name=i),o.id=t,o}function createAndAppend(e,t,i,n,a,o){let r=createEl(e,t,i,n,a);o.appendChild(r)}function setValue(e,t){let i=document.getElementsByName(e);i&&i[0]&&(i[0].value=JSON.stringify(t).replace(/\"/g,""))}function formToJSON(e,t){return[].reduce.call(e,(e,i)=>{if(!t(i))return e;if(i.dataset.exportArray){let t=i.dataset.exportArray;e[t]||(e[t]={});let n=i.value||"[]";e[t][i.name]=JSON.parse(n)}else e[i.name]=i.value;return e},{})}function highlightDuplicates(e){let t=document.querySelectorAll("input[type=text]"),i=Array.from(t).filter(t=>t.value==e);return!!(i&&i.length>1)&&(i.forEach(e=>e.classList.add("inputDuplicate")),!0)}function createSelectOption(e,t,i){let n=document.createElement("option");n.value=t,n.text=e,i.appendChild(n)}function loadConfigPanelStyles(){var e=document.createElement("style");e.innerHTML=ConfigPanelStyles,document.body.appendChild(e)}class ConfigPanel{constructor(e,t){this.controller=e,this.lastMessageTimeStamp=0,this.padCount=8,this.input=t,loadConfigPanelStyles(),this.controller.onMidiMessage(e=>{if(Date.now()-this.lastMessageTimeStamp<250)return;this.lastMessageTimeStamp=Date.now();let t=`[${e.data.toString()}]`,i=document.activeElement,n=(i.id,document.activeElement.value);Array.from(document.querySelectorAll(".inputDuplicate")).filter(e=>e.value==n).forEach(e=>e.classList.remove("inputDuplicate")),"text"==i.type&&(document.activeElement.value=t),highlightDuplicates(t);let a=document.activeElement.nextSibling;for(;a;){if(a.type&&"text"==a.type){a.focus();break}a=a.nextSibling}}),this.controller.onMidiChanged(this.onMidiChanged),this.controller.Config&&(this.padCount=Object.keys(this.controller.Config.pads).length),this.buildForm(t)}onMidiChanged(e){let t={m:"disconnected",n:"disconnected"};"disconnected"!=e.port.state&&(t={m:e.port.manufacturer,n:e.port.name}),document.getElementById("jsonManufacturer").value=t.m,document.getElementById("jsonName").value=t.n}jsonToForm(e){Object.keys(e).forEach(t=>{e[t].constructor==Object?Object.keys(e[t]).forEach(i=>setValue(i,e[t][i])):setValue(t,e[t])}),Object.keys(e).forEach(t=>{e[t].constructor==Object?Object.keys(e[t]).forEach(i=>highlightDuplicates(JSON.stringify(e[t][i]))):highlightDuplicates(e[t])})}loadExisting(e){e&&this.jsonToForm(e)}closeForm(){removeElement("formDivOuterSuperMidi")}handleFormSubmit(e){const t=formToJSON(document.getElementById("formSuperMidiConfig").elements,e=>"true"==e.dataset.export);console.dir(t),Configurator.saveToStorage(t),this.controller.loadConfiguration(t.name),removeElement("formDivOuterSuperMidi")}changeselect(e){let t=document.getElementById("fInputPadCount"),i=e.srcElement,n=i.options[i.selectedIndex].value;this.padCount!=n&&(this.padCount=n,this.closeForm(),this.buildForm()),t.style.visibility="Other"==n?"visible":"hidden"}buildForm(e){let t=document;console.log("Fallback to manual configuration from form.");let i=createEl("form","formSuperMidiConfig"),n=createEl("div","formDivOuterSuperMidi");n.className="formOuter";let a=createEl("div","formDivMiddleSuperMidi");a.className="formMiddle";let o=createEl("div","formDivInnerSuperMidi");o.className="formInner",createAndAppend("h1","deviceInfo","","Device information","",i),createAndAppend("p","deviceInfoInstruction","","Reconnecting a MIDI device will populate manufacturer and port name.","",i);let r=createEl("input","jsonName","name","","text");r.dataset.export="true",e&&(r.value=e.name);let s=createEl("Label","lblName","lblName","Device name");s.setAttribute("for","name"),i.appendChild(s),i.appendChild(r),createAndAppend("BR","","","","",i);let l=createEl("input","jsonManufacturer","manufacturer","","text");l.dataset.export="true",e&&(l.value=e.manufacturer);let d=createEl("Label","lblManufacturer","","Manufacturer");d.setAttribute("for","manufacturer"),i.appendChild(d),i.appendChild(l),createAndAppend("BR","","","","",i),createAndAppend("h1","pads","","Pads mapping","",i),createAndAppend("p","devicePadInstruction","","Leaving focus in one field and sending a MIDI message will associate the MIDI pad/button with SuperMidi button.","",i);let u=createEl("Label","lblPadCount","","Number of pads");u.setAttribute("for","selectPadCount");let c=createEl("select","selectPadCount","selectPadCount","","");c.onchange=(e=>this.changeselect(e)),Array(8).fill().map((e,t)=>createSelectOption(pow(2,t),pow(2,t),c)),createSelectOption("Other","Other",c),[].forEach.call(document.querySelectorAll("#selectPadCount :checked"),e=>this.padCount=e.value);let p=createEl("input","fInputPadCount","fInputPadCount","","text");p.style.visibility="hidden",i.appendChild(u),i.appendChild(c),i.appendChild(p),createAndAppend("BR","","","","",i);for(let e=0;e<this.padCount;e++){let t=createEl("input","jsonPad_"+e,"pad_"+e,"","text");t.dataset.export="true",t.dataset.exportArray="pads",t.className="inputSmall";let n=createEl("Label","","PAD "+e,"PAD "+e,"");n.setAttribute("for","jsonPad_"+e),n.className="labelSmall",i.appendChild(n),i.appendChild(t),e%2==1&&createAndAppend("BR","","","","",i)}let h=t.createElement("input");h.innerHTML="Submit",h.setAttribute("type","submit"),h.onclick=(()=>this.handleFormSubmit()),createAndAppend("BR","","","","",i),i.appendChild(h),n.appendChild(a),a.appendChild(o),o.appendChild(i),i.addEventListener("submit",()=>!1),document.body.appendChild(n),this.loadExisting(this.controller.Config)}}class SuperMidi{constructor(){this.MidiOut=null,this.MidiInputs=[],this.MidiOuputs=[],this.knobSet=new KnobSet,this.padSet=null,this._MidiChangedTriggers=[],this._MidiMessageTriggers=[],this.Config=null,this.configPanel=null,this.initialized=!1}onMidiChanged(e){this._MidiChangedTriggers.includes(e)?console.log("Ignoring attempt to subscribe to evnet!"):this._MidiChangedTriggers.push(e)}onMidiMessage(e){this._MidiMessageTriggers.push(e)}onMidiChangedHandler(e){this._MidiChangedTriggers&&this._MidiChangedTriggers.forEach(t=>t(e))}onMidiMessageHandler(e){if(this._MidiMessageTriggers)for(let t in this._MidiMessageTriggers)this._MidiMessageTriggers[t](e)}getMIDIMessage(e){let t=e.data;this.onMidiMessageHandler(e),this.padSet.updateByMessage(t);let i=PadSet.ixFromNotes(t);this.padSet.pads[i]&&console.log("Pressed "+this.padSet.pads[i].name)}onMIDIFailure(e){console.error("Could not access your MIDI devices."),console.error(e)}loadConfiguration(e){console.debug(`Loading configuration for device '${e}'.`);for(let t of this.MidiInputs.values())if(t.id==e){return(new Configurator).getConfigurationOnline(t.manufacturer,t.name).then(e=>this.Config=new Configuration(e)).catch(e=>this.configFromStorage(t.manufacturer,t.name)).then(()=>this.padSet=new PadSet(PAD_MODE.RADIO,this.Config.pads)).catch(e=>this.configManually(t))}console.groupEnd()}configFromStorage(e,t){return new Promise((i,n)=>{if(this.Config=Configurator.getFromStorage(e,t),!this.Config)throw"Loading from local storage: not found!";console.log("Loading from local storage... %cfound!","color: #008f68;"),this.initialized=!0,i()})}configManually(e){this.configPanel&&this.configPanel.closeForm(),this.configPanel=new ConfigPanel(this,e)}onMIDISuccess(e){for(var t of(e.onstatechange=(t=>{"pending"!=t.port.connection&&(console.log(t.port.connection,t.port.name,t.port.manufacturer,t.port.state),this.MidiInputs=e.inputs,this.MidiOutputs=e.outputs,this.onMidiChangedHandler(t))}),this.MidiInputs=e.inputs,this.MidiOutputs=e.outputs,e.inputs.values()))t.onmidimessage=(e=>this.getMIDIMessage(e));null==this.MidiOutputs&&console.error("No MIDI output found!")}init(){if(!navigator.requestMIDIAccess){let e="SuperMidiJS will not work here :(  The MIDI API is not supported in this browser.  To use this library, please switch to a support browser, such as Chrome.  For a list of supported browsers, check https://caniuse.com/#feat=midi";return alert(e),void console.error(e)}navigator.requestMIDIAccess({sysex:!0}).then(e=>this.onMIDISuccess(e),this.onMIDIFailure)}}export{SuperMidi};
